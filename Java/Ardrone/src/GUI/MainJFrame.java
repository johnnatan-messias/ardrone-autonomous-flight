/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import ardrone.Ardrone;
import ardrone.Controle;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.IOException;
import java.net.UnknownHostException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Johnnatan
 */
public class MainJFrame extends javax.swing.JFrame implements KeyListener {

    private boolean active = true;
    private CameraHorizontalJFrame cameraHorizontal = new CameraHorizontalJFrame();
    private CameraVerticalJFrame cameraVertical = new CameraVerticalJFrame();
    private GuideGUI guideGUI = new GuideGUI();
    private LogGUI logGUI = new LogGUI();
    private Controle controle;

    /**
     * Creates new form NewJFrame
     */
    public MainJFrame() {
        initComponents();
        try {
            controle = new Controle();
        } catch (UnknownHostException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        this.addKeyListener(this);



    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog_About = new javax.swing.JDialog();
        jPanel_About = new javax.swing.JPanel();
        jLabel_About = new javax.swing.JLabel();
        jButton_About_Close = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel_Main = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea_Log = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem_Main_Exit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu_Main_Cameras = new javax.swing.JMenu();
        jMenu_Main_Cameras_Vertical = new javax.swing.JMenuItem();
        jMenu_Main_Cameras_Horizontal = new javax.swing.JMenuItem();
        jMenu_Main_Log = new javax.swing.JMenuItem();
        jMenu_Main_Help = new javax.swing.JMenu();
        jMenuItem_About = new javax.swing.JMenuItem();
        jMenuItem_Guide = new javax.swing.JMenuItem();

        jDialog_About.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jDialog_About.setTitle("Sobre o Programa");
        jDialog_About.setAlwaysOnTop(true);
        jDialog_About.setMinimumSize(new java.awt.Dimension(387, 195));
        jDialog_About.setResizable(false);

        jPanel_About.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sobre", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(255, 0, 0)));

        jLabel_About.setText("Sobre o Programa");

        jButton_About_Close.setText("Fechar");
        jButton_About_Close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_About_CloseActionPerformed(evt);
            }
        });

        jLabel1.setText("Programa desenvolvido por Johnnatan Messias");

        javax.swing.GroupLayout jPanel_AboutLayout = new javax.swing.GroupLayout(jPanel_About);
        jPanel_About.setLayout(jPanel_AboutLayout);
        jPanel_AboutLayout.setHorizontalGroup(
            jPanel_AboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_AboutLayout.createSequentialGroup()
                .addGroup(jPanel_AboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_AboutLayout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addComponent(jLabel_About))
                    .addGroup(jPanel_AboutLayout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(jButton_About_Close)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_AboutLayout.createSequentialGroup()
                .addGap(0, 69, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(61, 61, 61))
        );
        jPanel_AboutLayout.setVerticalGroup(
            jPanel_AboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_AboutLayout.createSequentialGroup()
                .addComponent(jLabel_About)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(43, 43, 43)
                .addComponent(jButton_About_Close)
                .addContainerGap())
        );

        javax.swing.GroupLayout jDialog_AboutLayout = new javax.swing.GroupLayout(jDialog_About.getContentPane());
        jDialog_About.getContentPane().setLayout(jDialog_AboutLayout);
        jDialog_AboutLayout.setHorizontalGroup(
            jDialog_AboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog_AboutLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel_About, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDialog_AboutLayout.setVerticalGroup(
            jDialog_AboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog_AboutLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel_About, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel_Main.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Main", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(255, 0, 51)));
        jPanel_Main.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jTextArea_Log.setColumns(20);
        jTextArea_Log.setEditable(false);
        jTextArea_Log.setRows(5);
        jTextArea_Log.setEnabled(false);
        jScrollPane1.setViewportView(jTextArea_Log);

        javax.swing.GroupLayout jPanel_MainLayout = new javax.swing.GroupLayout(jPanel_Main);
        jPanel_Main.setLayout(jPanel_MainLayout);
        jPanel_MainLayout.setHorizontalGroup(
            jPanel_MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_MainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel_MainLayout.setVerticalGroup(
            jPanel_MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
        );

        jLabel2.setText("Rel처gio");

        jMenu1.setText("File");

        jMenuItem_Main_Exit.setText("Sair");
        jMenuItem_Main_Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_Main_ExitActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem_Main_Exit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenu_Main_Cameras.setText("C창meras");

        jMenu_Main_Cameras_Vertical.setText("C창mera Vertical");
        jMenu_Main_Cameras_Vertical.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu_Main_Cameras_VerticalActionPerformed(evt);
            }
        });
        jMenu_Main_Cameras.add(jMenu_Main_Cameras_Vertical);

        jMenu_Main_Cameras_Horizontal.setText("C창mera Horizontal");
        jMenu_Main_Cameras_Horizontal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu_Main_Cameras_HorizontalActionPerformed(evt);
            }
        });
        jMenu_Main_Cameras.add(jMenu_Main_Cameras_Horizontal);

        jMenu_Main_Log.setText("Logs");
        jMenu_Main_Log.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu_Main_LogActionPerformed(evt);
            }
        });
        jMenu_Main_Cameras.add(jMenu_Main_Log);

        jMenuBar1.add(jMenu_Main_Cameras);

        jMenu_Main_Help.setText("Ajuda");

        jMenuItem_About.setText("Sobre");
        jMenuItem_About.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_AboutActionPerformed(evt);
            }
        });
        jMenu_Main_Help.add(jMenuItem_About);

        jMenuItem_Guide.setText("Guia");
        jMenuItem_Guide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_GuideActionPerformed(evt);
            }
        });
        jMenu_Main_Help.add(jMenuItem_Guide);

        jMenuBar1.add(jMenu_Main_Help);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel_Main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel_Main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        new Thread(){

            @Override

            public void run() {

                while(true){

                    GregorianCalendar gc = new GregorianCalendar();

                    int hora = gc.get(Calendar.HOUR_OF_DAY);

                    int minuto = gc.get(Calendar.MINUTE);

                    int segundo = gc.get(Calendar.SECOND);

                    String horaString;

                    String minString;

                    String segundoString;

                    if(hora < 10){

                        horaString = "0"+hora;

                    }else{

                        horaString = ""+hora;

                    }

                    if(minuto < 10){

                        minString = "0"+minuto;

                    }else{

                        minString = ""+minuto;

                    }

                    if(segundo < 10){

                        segundoString = "0"+segundo;

                    }else{

                        segundoString = ""+segundo;

                    }

                    jLabel2.setText(horaString+":"+minString+":"+segundoString);

                    try{

                        sleep(1000);

                    }catch(Exception e){}

                }

            }

        }.start();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem_AboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_AboutActionPerformed
        // TODO add your handling code here:
        jDialog_About.setVisible(true);
    }//GEN-LAST:event_jMenuItem_AboutActionPerformed

    private void jButton_About_CloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_About_CloseActionPerformed
        // TODO add your handling code here:
        jDialog_About.dispose();
    }//GEN-LAST:event_jButton_About_CloseActionPerformed

    private void jMenu_Main_Cameras_VerticalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu_Main_Cameras_VerticalActionPerformed
        // TODO add your handling code here:
        cameraVertical.setVisible(true);
    }//GEN-LAST:event_jMenu_Main_Cameras_VerticalActionPerformed

    private void jMenu_Main_Cameras_HorizontalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu_Main_Cameras_HorizontalActionPerformed
        // TODO add your handling code here:
        cameraHorizontal.setVisible(true);
    }//GEN-LAST:event_jMenu_Main_Cameras_HorizontalActionPerformed

    private void jMenuItem_Main_ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_Main_ExitActionPerformed
        try {
            // TODO add your handling code here:
            controle.land();
            controle.disconnect();
            System.exit(0);
        } catch (IOException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem_Main_ExitActionPerformed

    private void jMenu_Main_LogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu_Main_LogActionPerformed
        // TODO add your handling code here:
        logGUI.setVisible(true);
    }//GEN-LAST:event_jMenu_Main_LogActionPerformed

    private void jMenuItem_GuideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_GuideActionPerformed
        // TODO add your handling code here:
        guideGUI.setVisible(true);
    }//GEN-LAST:event_jMenuItem_GuideActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_About_Close;
    private javax.swing.JDialog jDialog_About;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel_About;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem_About;
    private javax.swing.JMenuItem jMenuItem_Guide;
    private javax.swing.JMenuItem jMenuItem_Main_Exit;
    private javax.swing.JMenu jMenu_Main_Cameras;
    private javax.swing.JMenuItem jMenu_Main_Cameras_Horizontal;
    private javax.swing.JMenuItem jMenu_Main_Cameras_Vertical;
    private javax.swing.JMenu jMenu_Main_Help;
    private javax.swing.JMenuItem jMenu_Main_Log;
    private javax.swing.JPanel jPanel_About;
    private javax.swing.JPanel jPanel_Main;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea_Log;
    // End of variables declaration//GEN-END:variables

    public boolean getActive() {
        return active;
    }

    public void setActive(boolean active) {
        this.active = active;
    }

    @Override
    public void keyTyped(KeyEvent e) {
    }

    @Override
    public void keyPressed(KeyEvent e) {
        try {
            int keyCode = e.getKeyCode();

            switch (keyCode) {
                case KeyEvent.VK_UP:
                    System.out.println("Front");
                    jTextArea_Log.append("Front\n");
                    controle.moveFront();
                    break;

                case KeyEvent.VK_DOWN:
                    System.out.println("Back");
                    jTextArea_Log.append("Back\n");
                    controle.moveBack();
                    break;

                case KeyEvent.VK_LEFT:
                    System.out.println("Left");
                    jTextArea_Log.append("Left\n");
                    controle.moveLeft();
                    break;

                case KeyEvent.VK_W:
                    System.out.println("Up");
                    jTextArea_Log.append("Up\n");
                    controle.moveUp();
                    break;

                case KeyEvent.VK_S:
                    System.out.println("Down");
                    jTextArea_Log.append("Down\n");
                    controle.moveDown();
                    break;

                case KeyEvent.VK_A:
                    System.out.println("Yaw Right");
                    jTextArea_Log.append("Yaw Right\n");
                    controle.moveYawRight();
                    break;

                case KeyEvent.VK_D:
                    System.out.println("Yam Left");
                    jTextArea_Log.append("Yaw Left\n");
                    controle.moveYawLeft();
                    break;

                case KeyEvent.VK_RIGHT:
                    System.out.println("Right");
                    jTextArea_Log.append("Right\n");
                    controle.moveRight();
                    break;

                case KeyEvent.VK_T:
                    System.out.println("TakeOff");
                    jTextArea_Log.append("TakeOff\n");
                    controle.takeOff();
                    break;

                case KeyEvent.VK_L:
                    System.out.println("Land");
                    jTextArea_Log.append("Land\n");
                    controle.land();
                    break;

                case KeyEvent.VK_Z:
                    System.out.println("Disconnect");
                    jTextArea_Log.append("Disconnect\n");
                    controle.disconnect();
                    break;

                case KeyEvent.VK_J:
                    System.out.println("Sequence");
                    jTextArea_Log.append("Sequence\n");
                    try {
                        controle.executeSequence3();
                    } catch (InterruptedException ex) {
                        Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    break;

                default:
                    System.out.println("Tecla errada");
                    jTextArea_Log.append("Tecla errada\n");
            }
            // Thread.sleep(50);
        } catch (IOException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void keyReleased(KeyEvent e) {
    }

    public void execute() {

        new Thread(new Runnable() {

            @Override
            public void run() {
                while (active) {
                    try {
                        Thread.sleep(1000);
                        System.out.println("oi");
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Ardrone.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
            }
        }).start();

    }
}
